version: "3.9"

services:
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    networks:
      cluster:
        ipv4_address: 192.168.0.5
    volumes:
      - ./grafana/grafana-datasource-config.yaml:/etc/grafana/provisioning/datasources/datasource.yaml

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    networks:
      cluster:
        ipv4_address: 192.168.0.7
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090

  mysql-exporter:
    image: prom/mysqld-exporter
    container_name: mysql-exporter
    hostname: mysql-exporter
    command:
      - --config.my-cnf=/cfg/.my.cnf
      - --mysqld.address=192.168.0.10:3306
    volumes:
      - ./mysql/config.my-cnf:/cfg/.my.cnf
    ports:
      - 9104:9104
    networks:
      cluster:
        ipv4_address: 192.168.0.13

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    hostname: cadvisor
    platform: linux/aarch64
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"
    ports:
      - "8080:8080"
    networks:
      cluster:
        ipv4_address: 192.168.0.6

  management1:
    image: mysql/mysql-cluster
    container_name: management1
    command: ndb_mgmd
    networks:
      cluster:
        ipv4_address: 192.168.0.2

  ndb1:
    image: mysql/mysql-cluster
    container_name: ndb1
    command: ndbd
    networks:
      cluster:
        ipv4_address: 192.168.0.3

  ndb2:
    image: mysql/mysql-cluster
    container_name: ndb2
    command: ndbd
    networks:
      cluster:
        ipv4_address: 192.168.0.4

  mysql1:
    image: mysql/mysql-cluster
    container_name: mysql1
    command: mysqld --default-authentication-plugin=mysql_native_password
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: nicolas
      MYSQL_DATABASE: db
    networks:
      cluster:
        ipv4_address: 192.168.0.10
    volumes:
      - ./mysql/privileges.sql:/docker-entrypoint-initdb.d/privileges.sql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql1
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: nicolas
      PMA_ABSOLUTE_URI: http://localhost:8080/
    depends_on:
      - mysql1
    networks:
      cluster:
        ipv4_address: 192.168.0.11

  frontend:
    image: nicolasanachuri/frontend:latest
    #build: ./frontend
    container_name: frontend
    ports:
      - "5000:5000"
    networks:
      - cluster
    environment:
      VITE_DEV_SERVER_HOST: "0.0.0.0"
    command: npm run dev -- --host 0.0.0.0
    depends_on:
      - backend 

  backend:
    image: nicolasanachuri/server:latest
    #build: ./server
    container_name: backend
    ports:
      - "3000:3000"
    networks:
      - cluster
    environment:
      PORT: 3000
      DB_HOST: mysql1
      DB_USER: root
      DB_PASSWORD: nicolas
      DB_DATABASE: db
      DB_WAITFORCONNECTIONS: "true"
      DB_CONNECTIONLIMIT: "10"
      DB_QUEUELIMIT: "0"
      DB_TABLENAME: users
    depends_on:
      - mysql1

  backup:
    image: mysql:5.7
    container_name: backup
    command: >
      sh -c "
      while true; do
        mysqldump -h mysql1 -u root -pnicolas --all-databases > /backups/backup-$(date +%F-%H-%M).sql;
        echo Backup completado a $(date);
        sleep 30;
      done
      "
    volumes:
      - db_backups:/backups
    depends_on:
      - mysql1
    networks:
      cluster:
        ipv4_address: 192.168.0.12

networks:
  cluster:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.0/24

volumes:
  db_backups:
    driver: local
